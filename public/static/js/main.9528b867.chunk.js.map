{"version":3,"sources":["components/Login.js","components/PopupPortal.js","components/Header.js","components/DateSort.js","components/Movies.js","components/BookingForm.js","components/Showings.js","components/Movie.js","components/Info.js","components/MyBookings.js","components/ContectBox.js","Services/BioApi.js","components/Popup.js","App.js","serviceWorker.js","index.js"],"names":["Login","close","bind","maybeClose","submitLogin","submitRegister","document","getElementById","click","style","display","event","target","tagName","this","preventDefault","username","value","password","props","BioApi","login","alert","register","onClose","id","method","onClick","type","name","React","Component","PopupPortal","popupShadow","state","setState","ReactDOM","createPortal","children","Header","logedin","showLogin","logout","loginUppdate","addListener","islogedin","to","activeClassName","DateSort","cinemas","dateOptions","cinemaOptions","cinema","push","ageOptions","movie","age_limit","className","Movies","movies","src","image_url","alt","currentTarget","parentElement","title","map","renderOneMoive","BookingForm","uppdatePrice","submit","wait","show","ticketCount","totalPRice","seat_price","priceElement","console","log","innerText","showId","seatCount","isLogin","addBookingCurrentUSer","email","addBookingNewUser","auditorium","cinema_id","startDate","Date","start_at","isLogedIn","onSubmit","toISOString","slice","spoken_language","subtitle_language","min","max","onChange","readOnly","required","href","Showings","bookingShow","movieid","shows","loadShows","showBooking","renderOneShow","hideBooking","auditoriums","auditorium_id","showID","getAttribute","currentShow","bookingForm","seats_left","data-show-id","match","params","withRouter","Movie","loadMovie","length","language","category","description","Info","MyBookings","reservations","uppdateReservations","reverse","booking","movieDate","first_seat_number","seat_count","renderOneBooking","ContentBox","exact","from","path","conction","auditoriumsPromis","auditoriumsList","cinemasPromis","cinemasList","eventFunctions","user","getJson","then","token","JSON","parse","localStorage","getItem","fetch","response","status","Error","text","json","formData","options","body","FormData","append","postJson","setItem","stringify","triggerListener","removeItem","eventFunction","Popup","App","api","pageToDisplay","Logedin","Boolean","window","location","hostname","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9528b867.chunk.js","sourcesContent":["import React from \"react\";\nimport './Login.css';\n\nclass Login extends React.Component {\n\n    constructor() {\n        super();\n        this.close = this.close.bind(this);\n        this.maybeClose = this.maybeClose.bind(this);\n        this.submitLogin = this.submitLogin.bind(this);\n        this.submitRegister = this.submitRegister.bind(this);\n    }\n\n    close() {\n        //TODO: FIX better\n        try{\n            document.getElementById('PopupShadow').click();\n            document.getElementById('loginForm').style.display = 'none';\n        } catch {}\n    }\n\n    maybeClose(event) {\n        if(event.target.tagName === \"FORM\") {\n           this.close();\n        } else {\n            event.preventDefault();\n        }\n    }\n\n    async submitLogin(event) {\n        event.preventDefault();\n\n        const username = document.getElementById(\"username\").value;\n        const password = document.getElementById(\"password\").value;\n        document.getElementById(\"password\").value = \"\";\n\n        if(await this.props.BioApi.login(username, password))\n        {\n            this.close();\n        } else {\n            alert(\"Login faild\");\n        }\n    }\n\n    async submitRegister(event) {\n        event.preventDefault();\n        const username = document.getElementById(\"username\").value;\n        const password = document.getElementById(\"password\").value;\n        document.getElementById(\"password\").value = \"\";\n\n        if(await this.props.BioApi.register(username, password))\n        {\n            this.props.onClose(event);\n        } else {\n            alert(\"Register faild\");\n        }\n    }\n\n    render() {\n        return (\n            <form id=\"loginForm\" method=\"post0\" onClick={this.maybeClose}>\n                <div id=\"Login\">\n                    <p>Login</p>\n                    <label>\n                        <span>Username:</span> \n                        <input id=\"username\" type=\"text\" name=\"username\"/>\n                    </label>\n                    <label>\n                        <span>Password:</span>\n                        <input id=\"password\" type=\"password\" name=\"password\"/>\n                    </label>\n                    <label>\n                        <input type=\"submit\" value=\"Register\" onClick={this.submitRegister} />\n                        <input type=\"submit\" value=\"Login\" onClick={this.submitLogin} />\n                    </label>\n                    <span id=\"LoginClose\" onClick={this.close}>X</span>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Login;\n","import ReactDOM from 'react-dom';\nimport React from \"react\";\n\nclass PopupPortal extends React.Component {\n    popupShadow = null;\n\n    constructor() {\n        super();\n        this.state = {popupShadow: this.popupShadow};\n    }\n\n    componentDidMount() {\n        if(this.popupShadow == null) {\n            this.popupShadow = document.getElementById('PopupShadow');\n            if(this.popupShadow != null) {\n                this.setState({popupShadow: this.popupShadow});\n            }\n        }\n    }\n\n    render() {\n        if(this.popupShadow == null) {\n            this.popupShadow = document.getElementById('PopupShadow');\n            if(this.popupShadow == null) {\n                return \"\";\n            }\n        }\n\n        return ReactDOM.createPortal(\n            this.props.children,\n            this.popupShadow\n        );\n    }\n}\n\nexport default PopupPortal;","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport Login from './Login';\nimport PopupPortal from './PopupPortal';\n\nimport './Header.css';\n\nclass Header extends React.Component {\n    constructor() {\n        super(); \n        this.state = { logedin: false }\n        this.showLogin = this.showLogin.bind(this);\n        this.logout = this.logout.bind(this);\n        this.loginUppdate = this.loginUppdate.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.BioApi.addListener(this.loginUppdate);\n\n        if(this.props.BioApi.islogedin()) {\n            this.setState({ logedin: true });\n        }\n    }\n\n    showLogin() {\n        document.getElementById('loginForm').style.display='flex';\n        document.getElementById('PopupShadow').style.display='block';\n    }\n\n    logout() {\n        this.props.BioApi.logout();\n    }\n\n    loginUppdate(logedin){\n        this.setState({logedin});\n    }\n\n    render() {\n        return (\n            <header id=\"MenuHedder\">\n                    <h1>KID CINEMA!</h1>\n                    <NavLink to=\"/movies\" activeClassName=\"active\">Movies</NavLink>\n                    <NavLink to=\"/info\" activeClassName=\"active\">Info</NavLink>\n\n                    { this.state.logedin ?\n                         (<>\n                            <NavLink to=\"/mybookings\" activeClassName=\"active\">My Bookings</NavLink>\n                            <span onClick={this.logout}>Logout</span>\n                         </>)\n                         :\n                         (<>\n                            <span onClick={this.showLogin}>Login</span>\n                            <PopupPortal>\n                                <Login BioApi={this.props.BioApi} />\n                            </PopupPortal>\n                         </>)\n                    }\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","//Sort movies on Today, Tomorrow and next day...\nimport React from 'react';\nimport './DateSort.css';\n\nclass DateSort extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { cinemas: [] };\n    }\n\n    async componentDidMount() {\n        const cinemas = await this.props.BioApi.cinemas();\n        this.setState({ cinemas });\n    }\n\n    render() {\n        const dateOptions = [\n            (<option value=\"All\">Date: All</option>),\n            (<option value=\"Monday\">Date: Idag</option>),\n            (<option value=\"Monday\">Date: Imorgon</option>),\n            (<option value=\"Monday\">Date: Next</option>)\n        ];\n\n        const cinemaOptions = [\n            (<option value=\"CinemaAll\">All Cinemas</option>),\n        ];\n\n        for(const cinema of this.state.cinemas) {\n            cinemaOptions.push(\n                (<option value={cinema.id}>{cinema.name}</option>)\n            )\n        }\n\n        let ageOptions = [\n            (<option value=\"baby\">Age: All</option>),\n            (<option value=\"baby\">Age: 0-6</option>),\n            (<option value=\"kid\">Age: 7-15</option>)\n        ];\n\n        if(this.props.movie != null) {\n            ageOptions = [\n                (<option value=\"baby\">Age: {this.props.movie.age_limit}</option>)\n            ];\n        }\n\n        return (\n            <div className=\"DateSort\">\n                <div>\n                <select>\n                    {dateOptions}\n                </select>\n\n                <select>\n                    {cinemaOptions}\n                </select>\n\n                <select>\n                    {ageOptions}\n                </select>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DateSort;","//List all movies that is showing right now.\n\n//APP Defult window\nimport React from 'react';\nimport {Link} from \"react-router-dom\";\nimport DateSort from './DateSort';\n\nimport './Movies.css';\n\nclass Movies extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { movies: [] };\n  }\n\n  async componentDidMount() {\n    const movies = await this.props.BioApi.movies();\n    this.setState({ movies });\n  }\n\n  renderOneMoive(movie){\n    return (\n      <div className=\"MovieHolder\">\n        <div>\n          <img src={movie.image_url} alt=\"Movie poster\" onClick={(event) => event.currentTarget.parentElement.parentElement.children[1].click()} />\n        </div>\n        <Link to={\"/movie/\"+movie.id}>{movie.title}</Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <DateSort movie={null} BioApi={this.props.BioApi} />\n        <div className=\"MovieGrid\">\n            {this.state.movies.map(this.renderOneMoive)}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Movies;\n","import React from 'react';\nimport './BookingForm.css';\n\nclass BookingForm extends React.Component {\n\n    constructor() {\n        super(); \n        this.uppdatePrice = this.uppdatePrice.bind(this);\n        this.submit = this.submit.bind(this);\n        this.close = this.close.bind(this);\n        this.maybeClose = this.maybeClose.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.props.BioApi.wait();\n    }\n\n    close() {\n        document.getElementById('PopupShadow').click();\n        this.props.onClose();\n    }\n\n    maybeClose(event) {\n        if(event.target.tagName === \"FORM\") {\n            this.close();\n        }\n    }\n\n    uppdatePrice() {\n        const show = this.props.show;\n        const ticketCount = +document.getElementById('ticketCount').value;\n        const moviePrice = show.seat_price;\n\n        const totalPRice = moviePrice * ticketCount;\n        const priceElement = document.getElementById('ticketsPrice');\n        console.log(priceElement);\n\n        priceElement.innerText = totalPRice;\n    }\n    \n    async submit(event) {\n        event.preventDefault();\n\n        const showId = this.props.show.id;\n        const seatCount = +document.getElementById('ticketCount').value;\n        const isLogin = this.props.BioApi.islogedin();\n\n        try{\n            if(isLogin) {\n                await this.props.BioApi.addBookingCurrentUSer(showId, seatCount);\n            } else {\n                const email = document.getElementById('email').value;\n                await this.props.BioApi.addBookingNewUser(showId, seatCount, email);\n            }\n            \n        } catch(error) {\n            //const errorJson = JSON.parse(error);\n            //console.error(\"error from BookingForm::submit():\", errorJson || error);\n            alert(\"Booking fail\");\n            return;\n        }\n\n        this.close();\n        alert(\"Bookings OK\");\n    }\n\n    render() {\n        const movie = this.props.movie;\n        const show = this.props.show;\n        const auditorium = show.auditorium;\n        const cinema = this.props.BioApi.cinema(auditorium.cinema_id);\n        const startDate = new Date(show.start_at);\n        const isLogedIn = this.props.BioApi.islogedin();\n        const email = this.props.BioApi.email();\n\n        console.log(\"Email:\", email);\n\n        return (\n            <form id=\"BookingForm\" onClick={this.maybeClose} onSubmit={this.submit}>\n                <div id=\"Booking\">\n\n                    <h3>Book tickets</h3>\n                    <p>\n                        <strong>{movie.title}</strong>\n                        <span>{startDate.toISOString().slice(11,16)} {startDate.toISOString().slice(0,10)}</span>\n                        <span>{cinema.name} {auditorium.name}</span>\n                        <span>{show.spoken_language} | Subtitle: {show.subtitle_language}</span> \n                    </p>\n\n                    <label>\n                        <span>Number of tickets: </span>     \n                        <input id=\"ticketCount\" name=\"ticketCount\" type=\"number\" min=\"1\" max=\"10\" onChange={this.uppdatePrice}/>\n                        <span>\n                            <span id=\"ticketsPrice\">{show.seat_price}</span> SEK\n                        </span>\n                    </label>\n\n                    <label>\n                        <span>Email:</span> \n                        {\n                            isLogedIn ?\n                            <input id=\"email\" name=\"email\" type=\"email\" value={email} readOnly />:\n                            <input id=\"email\" name=\"email\" type=\"email\"/>\n                        }\n                    </label>\n\n                    <label>\n                        <input type=\"checkbox\" value=\"byRulse\" required />\n                        <span>I have read and agree with the <a target=\"_blank\" href=\"/Aggrement.pdf\">terms and conditions</a></span>\n                    </label>\n\n                    <label>\n                        <input type=\"checkbox\" value=\"byAge\" required/>\n                        <span>I am 15 years of age or older.</span>\n                    </label>\n\n                    <label>\n                        <input type=\"submit\" value=\"validate\" />\n                    </label>\n                    <span id=\"BookingClose\" onClick={this.close}>X</span>\n                </div>\n            </form>\n    );\n  }\n}\n\nexport default BookingForm;\n","//Show the info of one movie.\nimport React from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport BookingForm from \"./BookingForm\";\nimport DateSort from \"./DateSort\";\nimport PopupPortal from \"./PopupPortal\";\nimport './Showings.css';\n\nclass Showings extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {bookingShow: null, movieid: 0, shows: []};\n        this.loadShows = this.loadShows.bind(this);\n        this.showBooking = this.showBooking.bind(this);\n        this.renderOneShow = this.renderOneShow.bind(this);\n        this.hideBooking = this.hideBooking.bind(this);\n    }\n    \n    async loadShows(movieid) {\n        const shows = await this.props.BioApi.shows(movieid);\n        console.log(\"A\", shows);\n        const auditoriums = await this.props.BioApi.auditoriums();\n        for(const auditorium of auditoriums) {\n            for(const show of shows) {\n                if(show.auditorium_id === auditorium.id) {\n                    show.auditorium = auditorium;\n                }\n            }\n        }\n        this.setState({ movieid, shows });\n    }\n\n    showBooking(event) {\n        const showID = +event.currentTarget.getAttribute('data-show-id');\n        let show = null;\n\n        for(const currentShow of this.state.shows){\n            if(currentShow.id === showID) {\n                show = currentShow;\n                break;\n            }\n        }\n\n        if(show === null) {\n            return;\n        }\n\n        this.setState({ bookingShow: show });\n        const bookingForm = document.getElementById('BookingForm');\n        if(bookingForm) {\n            bookingForm.style.display='flex';\n        }\n        document.getElementById('PopupShadow').style.display='block';\n    }\n\n    hideBooking() {\n        this.setState({ bookingShow: null }); \n    }\n\n    renderOneShow(show){\n        const startDate = new Date(show.start_at);\n\n        return (\n            <li>\n                <span>\n                {startDate.toISOString().slice(11,16)}\n                </span>\n                <span>\n                    <strong>{show.auditorium.name}</strong><br/>\n                    <span>{show.spoken_language} | Subtitle: {show.subtitle_language}</span> \n                </span>\n                <span>\n                    {show.seats_left} seats left <button className=\"BookingButton\" data-show-id={show.id} onClick={this.showBooking}>Too Booking</button>\n                </span>\n            </li>\n        );\n      };\n\n\n    render() {\n        const movieid = this.props.match.params.id;\n\n        if(movieid && this.state.movieid !== movieid) {\n            this.loadShows(movieid);\n        }\n\n        return (\n            <>\n                <DateSort movie={this.props.movie} BioApi={this.props.BioApi} />\n                <ul className=\"Showlist\">\n                    {this.state.shows.map(this.renderOneShow)}\n                </ul>\n                <PopupPortal>\n                    {this.state.bookingShow !== null ? (\n                        <BookingForm \n                            BioApi={this.props.BioApi} \n                            movie={this.props.movie} \n                            show={this.state.bookingShow}\n                            onClose={this.hideBooking}\n                            />) \n                            : \"\"}\n                </PopupPortal>\n            </>      \n        );\n    }\n}\n\nexport default withRouter(Showings);","//Show the info of one movie.\nimport React from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport Showings from \"./Showings\";\nimport './Movie.css';\n\nclass Movie extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {movieid: 0, movie: null };\n    }\n    \n    async loadMovie(id) {\n        const movie = await this.props.BioApi.movie(id);\n        this.setState({ movieid: id, movie })\n    }\n    \n    render() {\n        const movieid = this.props.match.params.id;\n\n        if(movieid && this.state.movieid !== movieid) {\n            this.loadMovie(movieid);\n        }\n\n        if(!this.state.movie){ \n            return (\n                <p>Loading</p>\n            );\n        }\n\n        return (\n            <>\n                <div id=\"MovieInfo\">\n                    <img id=\"MovePicture\" alt=\"movie poster\" src={this.state.movie.image_url} />\n                    \n                    <div id=\"MovieTitle\">\n                        <h1>{this.state.movie.title}</h1>\n                        <label>\n                            Age: {this.state.movie.age_limit} |&nbsp;\n                            Time: {this.state.movie.length} |&nbsp;\n                            {this.state.movie.language} |&nbsp;\n                            {this.state.movie.category}\n                        </label>\n                    </div>                    \n                </div>\n\n                <div id=\"MovieText\">\n                    {this.state.movie.description}\n                </div>\n                \n                <Showings movie={this.state.movie} BioApi={this.props.BioApi}/>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Movie);\n","import React from \"react\";\n\nclass Info extends React.Component {\n    render() {\n        return (\n                <div>\n                    <h1>Tuffs Bio!</h1>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed rhoncus faucibus scelerisque. Nulla molestie risus velit, quis dapibus eros hendrerit nec. Aliquam quis felis eu nulla dignissim scelerisque. Donec imperdiet quam non cursus congue. Aenean fringilla nulla vel ipsum suscipit tempus. Pellentesque vitae nisi ante. Nunc interdum, nibh ut pellentesque dignissim, nibh mi tincidunt ligula, et auctor ipsum leo eget arcu.\n\n                        Sed sed magna sem. Duis luctus at metus venenatis eleifend. Mauris sit amet velit magna. Mauris sollicitudin, diam vel volutpat tincidunt, augue metus facilisis ipsum, eu commodo elit nulla pretium massa. Nam ac quam sagittis, fermentum nunc eget, commodo lacus. Nullam in facilisis arcu, vel ultricies metus. Nam non lectus ut est ullamcorper varius. Duis dapibus accumsan tempor. Duis finibus ac risus ac commodo. In hac habitasse platea dictumst. Nam sit amet venenatis nisl. Proin tellus dui, tempus sit amet pulvinar nec, mattis non urna.\n\n                        Phasellus lectus nisl, dignissim id egestas vel, facilisis a dolor. Mauris fringilla nec elit in consectetur. Pellentesque euismod et turpis nec tempor. Sed at tempor tortor, nec hendrerit massa. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Vestibulum dictum non nisi sit amet aliquet. Etiam sodales tempus velit, ut interdum mi tempor in. Donec dapibus bibendum purus, ac euismod tortor feugiat eu. Aenean eget libero pellentesque, posuere massa quis, ornare sem. Vivamus lobortis sem a euismod fermentum. Donec purus arcu, posuere quis facilisis a, condimentum pulvinar eros. Nullam vitae faucibus massa. Phasellus sed lorem quis nunc blandit tincidunt.\n                    </p>\n                </div>\n        );\n    }\n}\n\nexport default Info;","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport './MyBookings.css';\n\nclass MyBookings extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { reservations: [] , logedin: false };\n        this.loginUppdate = this.loginUppdate.bind(this);\n    }\n\n    async componentDidMount() {\n        this.props.BioApi.addListener(this.loginUppdate);\n\n        if(this.props.BioApi.islogedin()) {\n            this.uppdateReservations();\n        }\n    }\n\n    async uppdateReservations() {\n        //await this.props.BioApi.login('tuffsruffs@gmail.com', 'a');\n        let reservations;\n\n        try {\n            reservations = await this.props.BioApi.reservations();\n            await this.props.BioApi.wait();\n        } catch {\n            alert(\"Faild to load reservations\");\n        }\n        console.log(\"reserv\",reservations);\n        //TODO: Sort by Date\n        if(reservations) {\n            reservations = reservations.reverse();\n            this.setState({ reservations: reservations });\n        }\n    }\n\n    loginUppdate(logedin){\n        this.setState({logedin});\n    }\n    \n    renderOneBooking(booking){\n        const show = booking.show;\n        const movie = show.movie;\n        const auditorium = this.props.BioApi.auditorium(show.auditorium_id);\n        const cinema = this.props.BioApi.cinema(auditorium.cinema_id);\n        const movieDate = new Date(show.start_at);\n        //console.log({cinema, auditorium, movie, show, booking});\n\n        return(\n            <li>\n                <img src={movie.image_url} alt=\"Movie poster\" />\n\n                <div>\n                    <h3>{movie.title}</h3>\n                    <div>\n                        <span>{cinema.name} - {auditorium.name} - {booking.show.spoken_language}</span>\n                        <span>Seats: {booking.first_seat_number} - {booking.first_seat_number + booking.seat_count - 1}</span>\n                    </div>\n                    <div>\n                        <span>{movieDate.toISOString().slice(11,16)} - {movieDate.toISOString().slice(0,10)}</span>\n                        <span>Price: {booking.show.seat_price * booking.seat_count}</span>\n                    </div>\n                </div>\n            </li>\n        );\n    }\n\n  render() {\n    if(!this.props.BioApi.islogedin()) {\n        return (\n            <Redirect to=\"/movies\" />\n        );\n    }\n\n    return (\n        <>\n            <h2>Your Bookings</h2>\n            <ul className=\"Bookinglist\">\n                {this.state.reservations.map(this.renderOneBooking.bind(this))}\n            </ul>\n        </>\n    );\n  }\n}\n\nexport default MyBookings;\n","import React from 'react';\nimport {Redirect,Route, Switch} from \"react-router-dom\";\nimport Movies from './Movies';\nimport Movie from './Movie';\nimport Info from './Info';\nimport MyBookings from './MyBookings';\n\nclass ContentBox extends React.Component {\n    render() {\n    return (\n        <div id=\"ContentBox\">\n            <Switch>\n                <Redirect exact from =\"/\" to =\"/movies\"/>\n                \n                <Route path=\"/movies\">\n                    <Movies BioApi={this.props.BioApi} />\n                </Route>\n                <Route path=\"/movie/:id\">\n                    <Movie BioApi={this.props.BioApi} />\n                </Route>\n                <Route path=\"/info\">\n                    <Info />\n                </Route>\n                <Route path=\"/mybookings\">\n                    <MyBookings BioApi={this.props.BioApi} />\n                </Route>\n                <Route>404</Route>\n            </Switch>\n        </div>\n    );}\n}\n\nexport default ContentBox;","class BioApi {\n    conction = \"https://bio.tuffsruffs.se/api/\";\n    //const conction = \"http://localhost:54426/api/\";\n\n    auditoriumsPromis = null;\n    auditoriumsList = [];\n    cinemasPromis = null;\n    cinemasList = [];\n    logedin = false;\n    eventFunctions = [];\n    user = null;\n\n    constructor() {\n        this.auditoriumsPromis = this.getJson(\"auditoriums\");\n        this.auditoriumsPromis.then((auditoriums) => this.auditoriumsList = auditoriums);\n        this.cinemasPromis = this.getJson(\"cinemas\");\n        this.cinemasPromis.then((cinemas) => this.cinemasList = cinemas);\n\n        const token = JSON.parse(localStorage.getItem('token'));\n        if(token) {\n            this.logedin = true;\n            this.user = token;\n        }\n    }\n    \n    async wait() {\n        await this.auditoriumsPromis;\n        await this.cinemasPromis;\n    }\n\n    async getJson(path) {\n        const response = await fetch(this.conction+path);\n        if(response.status < 200 || response.status >= 300 ) {\n            throw new Error(await response.text());\n        }\n        return response.json();\n    }\n\n    async postJson(path, formData){\n        const options = {\n            method: 'POST',\n            body: formData\n        }\n        const response = await fetch(this.conction+path, options);\n        if(response.status < 200 || response.status >= 300 ) {\n            throw new Error(await response.text());\n        }\n        return response.json();\n    }\n\n    async postString(path , formData){\n        const options = {\n            method: 'POST',\n            body: formData\n        }\n        const response = await fetch(this.conction+path, options);\n        \n        if(response.status < 200 || response.status >= 300 ) {\n            throw new Error(await response.text());\n        }\n\n        return response.text();\n    }\n\n    async movies() {\n        return this.getJson(\"movies\");\n    }\n\n    async movie(id) {\n        return this.getJson(\"movie/\"+id);\n    }\n\n    auditoriums(){\n        return this.auditoriumsList;\n    }\n\n    auditorium(id) {\n        for(const auditorium of this.auditoriumsList) {\n            if(id === auditorium.id){\n                return auditorium;\n            }\n        }\n        return null;\n    }\n\n    cinemas(){\n        return this.cinemasList;\n    }\n\n    cinema(id) {\n        for(const cinema of this.cinemasList) {\n            if(id === cinema.id){\n                return cinema;\n            }\n        }\n        return null;\n    }\n\n    async shows(movieid){\n        return this.getJson(\"movie/\"+movieid+\"/shows\");\n    }\n    \n    islogedin() {\n        return this.logedin;\n    }\n\n    email() {\n        if(this.user) {\n            return this.user.email;\n        } else {\n            return \"\";\n        }\n    }\n\n    async login(username, password){\n        let formData;\n        formData = new FormData();\n\n        formData.append('email', username);\n        formData.append('password', password);\n\n        try {\n            this.user = await this.postJson(\"login\", formData);\n        }\n        catch\n        {\n            return false;\n        }\n\n        this.logedin = true;\n        localStorage.setItem('token', JSON.stringify(this.user));\n        this.triggerListener();\n        return this.logedin;\n    }\n\n    async register(username, password){\n        let formData;\n        formData = new FormData();\n\n        formData.append('email', username);\n        formData.append('password', password);\n\n        try {\n            this.user = await this.postJson(\"register\", formData);\n        }\n        catch\n        {\n            return false;\n        }\n\n        this.logedin = true;\n        localStorage.setItem('token', JSON.stringify(this.user));\n        this.triggerListener();\n        return this.logedin;\n    }\n\n    async reservations() {\n        let formData;\n        formData = new FormData();\n        formData.append('token', this.user.token);\n\n        try {\n            return this.postJson(\"reservations\", formData);\n        } \n        catch \n        {\n            return [];\n        }\n    }\n\n    async addBookingCurrentUSer(showId, seatCount) {\n        let formData = new FormData();\n        formData.append('token', this.user.token);\n        formData.append('show_id', showId);\n        formData.append('seats', seatCount);\n\n        return this.postJson(\"book\", formData); \n    }\n\n    async addBookingNewUser(showId, seatCount, email) {\n        let formData = new FormData();\n        formData.append('email', email);\n        formData.append('show_id', showId);\n        formData.append('seats', seatCount);\n\n        return this.postJson(\"book\", formData); \n    }\n\n    logout(){\n        this.logedin = false;\n        this.user = null;\n        localStorage.removeItem('token');\n        this.triggerListener();\n    }\n\n    addListener(eventFunction){\n        this.eventFunctions.push(eventFunction);\n    }\n\n    triggerListener(){\n        for(const event of this.eventFunctions){\n            event(this.logedin);\n        }\n    }\n}\n\nexport default BioApi;","import React from \"react\";\nimport './Popup.css';\n\nclass Popup extends React.Component {\n\n    close(){\n        document.getElementById(\"PopupShadow\").style.display = \"none\";\n    }\n\n    render() {\n        return (\n            <div id=\"PopupShadow\" onClick={this.close} />\n        );\n    }\n}\n\nexport default Popup;\n","//APP Defult window\nimport React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport './App.css';\n\nimport Header from './Components/Header';\nimport ContentBox from './Components/ContectBox';\nimport BioApi from './Services/BioApi';\nimport Popup from './Components/Popup';\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.api = new BioApi();\n    this.state = { pageToDisplay: \"HOME\" };\n  }\n\n  render() {\n  return (\n    <Router>\n      <Header Logedin={true} BioApi={this.api} />\n      <ContentBox BioApi={this.api} />\n      <Popup BioApi={this.api} />\n    </Router>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}